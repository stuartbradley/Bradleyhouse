@page "/ViewMeals"

@using Microsoft.EntityFrameworkCore
@using Weekly_Shopping.Data
@using Weekly_Shopping.Data.ViewModels
@inject ViewMealsViewModel ViewModel


@if (ViewModel.FilteredList == null)
{   
    <p>Loading...</p>
}
else
{
    <MudContainer Fixed="true">
            <MudItem xs="12" sm="6" md="4" >
                <MudTextField T="string" Immediate="true" ValueChanged="ViewModel.searchChanged" Label="Search" Variant="Variant.Outlined" ></MudTextField>
            </MudItem>
            <MudItem xs="12" sm="6" md="4">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@ViewModel.CreateShoppingList">Create Shopping List</MudButton>
            </MudItem>
            <MudItem xs="12" sm="6" md="4">
                <MudSlider Min="1" Max="12" @bind-Value="@ViewModel.Servings" Color="Color.Info">Servings: @ViewModel.Servings</MudSlider>
            </MudItem>

        <MudGrid>
            @foreach (var meal in ViewModel.FilteredList)
            {
                <MudItem md="3">
                    <MudCard>
                        <MudCardHeader>
                            <CardHeaderContent>
                                @if(meal.StockCount > 0)
                                {
                                    <MudText Typo="Typo.h6">@meal.Name (@meal.StockCount)</MudText>
                                }
                                else
                                {
                                    <MudText Typo="Typo.h6">@meal.Name</MudText>
                                }
                            </CardHeaderContent>
                            <CardHeaderActions>
                                <MudCheckBox @bind-Checked="@meal.Selected" />
                                <MudIconButton OnClick="() => ViewModel.deleteMeal(meal.Id)" Icon="@Icons.Material.Filled.Delete" Color="Color.Default" />
                                <MudIconButton OnClick="() => ViewModel.ViewMeal(meal)" Icon="@Icons.Material.Filled.ArrowDropDownCircle" Color="Color.Default" />
                                <MudIconButton OnClick="() => meal.addOneToStock()" Icon="@Icons.Material.Filled.PlusOne" Color="Color.Default" />
                                 @if(meal.StockCount > 0){
                                    <MudIconButton OnClick="() => meal.removeOneFromStock()" Icon="@Icons.Material.Filled.Remove" Color="Color.Default" />
                                 }

                            </CardHeaderActions>
                        </MudCardHeader>
                        @if (meal.ViewMeal)
                        {
                            <MudCardContent>
                                <MudList>
                                    @foreach (var ingredient in meal.Ingredients)
                                    {
                                        <MudListItem Text="@ingredient.ToString()" Icon="@Icons.Custom.Uncategorized.FoodApple"/>
                                    }
                                </MudList>
                            </MudCardContent>
                        }
                    </MudCard>
                </MudItem>
            }
        </MudGrid>
    </MudContainer>
}