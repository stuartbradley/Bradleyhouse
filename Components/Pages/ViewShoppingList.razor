@page "/ShoppingList/{ShoppingListId:int}"
@using BradleyHouse.Data.Models.MealPrep
@using Microsoft.EntityFrameworkCore
@using Weekly_Shopping.Data

<MudContainer Fixed="true">
    <MudCheckBox Size="Size.Large" T="bool" ValueChanged="() => _hidePickedItems = !_hidePickedItems" Label="Hide Picked Items"></MudCheckBox>
    <MudGrid>
        @foreach (var ingredient in _ingredients)
        {
            if (_hidePickedItems)
                if (ingredient.Picked)
                    continue;

            <MudItem md="3" xs="12">
                <MudCheckBox Size="Size.Large" Value="@ingredient.Picked" T="bool" ValueChanged="@((value) => ingredientChanged(ingredient, value))" Label="@ingredient.ToString()"></MudCheckBox>
            </MudItem>
        }
    </MudGrid>


</MudContainer>

@code{
    [Inject]
    MealPlannerContext MealPlannerContext { get; set; }

    [Parameter]
    public int ShoppingListId { get; set; } = 0;
    private List<ShoppingListIngredient> _ingredients = new();
    private bool _hidePickedItems;
    protected async override Task OnInitializedAsync()
    {
        var shoppingList = await MealPlannerContext.ShoppingList.Include(x => x.Ingredients).ThenInclude(x => x.Food).SingleAsync(x => x.Id == ShoppingListId);
        _ingredients = shoppingList.Ingredients;
    }

    private async Task ingredientChanged(ShoppingListIngredient ingredient, bool value)
    {
        ingredient.Picked = value;
        MealPlannerContext.Update(ingredient);
        MealPlannerContext.SaveChanges();
        StateHasChanged();   
    }

}
